#pragma once

#include <cstdint>

enum class ErrorCode : uint32_t {
  // System errors that should trigger hard fault (0x0000-0x0FFF)
  NONE = 0x0000,
  UNKNOWN = 0x0001,
  HARD_FAULT = 0x0002,
  MEMORY_CORRUPTION = 0x0003,
  STACK_CORRUPTION = 0x0004,
  TASK_STATE_CORRUPTION = 0x0005,
  TASK_STACK_CORRUPTION = 0x0006,
  SCHEDULER_CORRUPTION = 0x0007,
  INTERRUPT_CORRUPTION = 0x0008,
  
  // Recoverable system errors (0x1000-0x1FFF)
  MEMORY_ALLOCATION_FAILED = 0x1000,
  STACK_OVERFLOW = 0x1001,
  INVALID_TASK_STATE = 0x1002,
  TASK_SCHEDULING_ERROR = 0x1003,
  SYSTEM_CLOCK_ERROR = 0x1004,
  POWER_MANAGEMENT_ERROR = 0x1005,
  
  // Peripheral initialization errors (0x2000-0x2FFF)
  ADC_INIT_FAILED = 0x2000,
  ADC_CALIBRATION_FAILED = 0x2001,
  ADC_READ_FAILED = 0x2002,
  ADC_CHANNEL_CONFIG_FAILED = 0x2003,
  
  UART_INIT_FAILED = 0x2100,
  UART_TRANSMIT_FAILED = 0x2101,
  UART_RECEIVE_FAILED = 0x2102,
  
  SPI_INIT_FAILED = 0x2200,
  SPI_TRANSFER_FAILED = 0x2201,
  SPI_DMA_INIT_FAILED = 0x2202,
  SPI_DMA_TRANSFER_FAILED = 0x2203,
  
  TIMER_INIT_FAILED = 0x2300,
  TIMER_CONFIG_FAILED = 0x2301,
  TIMER_PWM_CONFIG_FAILED = 0x2302,
  
  GPIO_INIT_FAILED = 0x2400,
  GPIO_CONFIG_FAILED = 0x2401,
  
  // Storage errors (0x3000-0x3FFF)
  SD_CARD_INIT_FAILED = 0x3000,
  SD_CARD_NOT_PRESENT = 0x3001,
  SD_CARD_READ_FAILED = 0x3002,
  SD_CARD_WRITE_FAILED = 0x3003,
  SD_CARD_BUS_WIDTH_ERROR = 0x3004,
  
  // Hardware errors (0x4000-0x4FFF)
  DMA_INIT_FAILED = 0x4000,
  DMA_TRANSFER_FAILED = 0x4001,
  DMA_CONFIG_FAILED = 0x4002,
  
  // Critical errors that should trigger hard fault (0xF000-0xFFFF)
  CRITICAL_MEMORY_CORRUPTION = 0xF000,
  CRITICAL_STACK_CORRUPTION = 0xF001,
  CRITICAL_HARDWARE_FAILURE = 0xF002,
  CRITICAL_SYSTEM_HANG = 0xF003,
  CRITICAL_INTERRUPT_FAILURE = 0xF004,
  CRITICAL_TASK_FAILURE = 0xF005,
  CRITICAL_SCHEDULER_FAILURE = 0xF006
}; 